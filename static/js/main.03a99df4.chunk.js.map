{"version":3,"sources":["config/firebase.ts","models/index.ts","state/context/index.tsx","components/breadcrumb/breadcrumb.tsx","components/breadcrumb/index.ts","components/explorer/contextMenu.tsx","components/elements/block/pdf.tsx","components/elements/block/view.tsx","components/elements/border/pdf.tsx","components/elements/border/view.tsx","components/elements/table/helpers.tsx","components/elements/table/pdf.tsx","components/elements/table/view.tsx","components/elements/text/pdf.tsx","components/elements/text/view.tsx","components/elements/image/pdf.tsx","components/elements/image/view.tsx","components/elements/index.ts","components/documentPDF/index.tsx","components/contextMenu/contextMenu.tsx","components/dialog/dialog.tsx","components/fsTree/index.tsx","state/modal.tsx","hooks/useModal.ts","hooks/useFileSystem.ts","utils/serviceWorker.ts","utils/deepClone.ts","hooks/useEditor.ts","state/fileSystem.tsx","components/modal/index.tsx","utils/classnames.ts","components/explorer/explorer.tsx","components/explorer/index.tsx","components/sidebar/sidebar.tsx","components/layout/layout.tsx","pages/dashboard/dashboard.tsx","state/editor.tsx","components/editor/components/block/block.tsx","components/editor/editor.tsx","components/elementControl/index.tsx","components/textSettings/textSettings.tsx","components/page/box.tsx","components/page/index.tsx","pages/document/components/leftPanel.tsx","pages/document/document.tsx","pages/document/index.tsx","routing/routes.tsx","index.tsx","assets/logo.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","uploadString","firestore","FILE_SYSTEM_ELEMENT","FOLDER","DOCUMENT","FILE_STATUS","DOCUMENT_IN_PROGRESS","DOCUMENT__DONE","TEMPLATE","ELEMENT","mockFn","documents","collection","FSContext","React","createContext","fsItems","Map","parentForCreateFromTemplate","copiedElement","setParentForCreateFromTemplate","getFolderElementsTreeById","getFolderElementsById","getElement","commit","removeById","createItem","copyItem","pasteItem","FSProvider","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","unsubscribe","id","type","map","element","children","objectSpread","items","forEach","value","isNeededType","parentId","push","get","doc","update","status","delete","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","newDocument","templateSnapshot","docRef","wrap","_context","prev","next","name","content","formTemplate","documentId","sent","add","abrupt","t0","Error","stop","_x","setState","_ref2","_callee2","newElement","_context2","_x2","parent","inherits","createClass","key","subscribe","nextProps","_this$state","react_default","createElement","Provider","props","_this2","onSnapshot","querySnapshot","set","PureComponent","getBreadcrumbList","list","item","reverse","_item","path","breadcrumbName","itemRender","route","params","routes","indexOf","react_router_dom","to","Breadcrumb","withRouter","match","useContext","breadcrumb","className","CONTEXT_MENU_ID","menus","icon","currentId","contextMenuMap","_contextMenuMap","defineProperty","getContextMenuId","contextMenu","BlockPDF","style","react_pdf_browser_es","BlockView","BorderPDF","BorderView","DEFAULT_PROPS","baseTableStyles","table","display","flexDirection","border","backgroundColor","fontSize","header","fontWeight","footer","row","cell","padding","getTableMembers","hasFooter","undefined","_data","toArray","other","slice","pop","body","cellRender","defaultColumnWidth","defaultCellStyle","cellsStyle","CellComponent","changeTable","isActive","isDone","actions","rowIndex","rowsLength","cellType","cellIndex","rowCount","current","columnCount","_getCellStyle","column","getIdFromCellPosition","_getCellStyle$colSpan","colSpan","_getCellStyle$style","resultStyle","width","isLastRow","isLastColumn","borderBottom","borderRight","getBorderStyle","defaultStyles","StyleSheet","create","TableCell","TablePDF","_props$hasFooter","_props$style","_props$cellsStyle","_getTableMembers","height","render","rows","_useState","useState","_useState2","slicedToArray","isEditable","setIsEditable","toggleEditability","inputRef","useRef","useEffect","focus","save","ev","target","es_form","Item","input","TextArea","ref","autosize","defaultValue","onPressEnter","onBlur","onClick","tooltip","placement","title","es_button","size","shape","removeColumnFromTableElement","TableView","innerRef","Fragment","addRowToTableElement","addColumnToTableElement","removeRowFromTableElement","TextPDF","TextView","handleChangeText","minHeight","onChange","e","ImagePDF","src","ImageView","background","backgroundSize","textElement","position","x","y","color","imageElement","blockElement","borderElement","tableElement","elements","_elements","control","DocumentPDF","pages","page","elementKey","top","left","pdf_BlockPDF","pdf_BorderPDF","pdf_TextPDF","pdf_ImagePDF","pdf_TablePDF","ContextMenuConnected","connectMenu","trigger","filter","includes","setPages","document","JSON","parse","fileName","es6","menu","selectable","documentPDF_DocumentPDF","blob","url","loading","error","es_icon","DialogComponent","open","onAction","onClose","modal","visible","onOk","onCancel","getTreeNodeIcon","expanded","icon_default","theme","TreeComponent","onSelect","tree_default","showIcon","switcherIcon","_","event","node","getTreeNodes","TreeNode","MODAL_MODES","CREATE_FOLDER","CREATE_DOCUMENT","CREATE_DOCUMENT_FROM_TEMPLATE","useModalContext","createUseContext","setOpen","_useState3","_useState4","mode","setMode","_useState5","_useState6","setTarget","modalToggle","modalMode","initialState","useFileSystem","folderId","_useContext","objectWithoutProperties","defaultFolders","isDefault","progress","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","deepClone","obj","serialized","stringify","saveIntervalId","maxX","maxY","removeCallback","removeIndex","index","pagesKey","Symbol","getTitle","Modal","setName","_useModalContext","history","onCreate","isTemplate","pathname","autoFocus","hasOwn","hasOwnProperty","getFSElementClasses","classNames","classes","_i","_args","arg","argType","isArray","_i2","_Object$keys","keys","join","fs-element","in-progress","Explorer","_useFileSystem","fsActions","_useModal","setModalState","nextState","closeModal","useModal","_useModal2","elementsModal","elementsModalActions","handleFSElement","fsTree_TreeComponent","handleContextMenuActions","table_default","bordered","showHeader","pagination","columns","dataIndex","dataSource","date","handleElementsModalAction","_elementsModal$target","collect","_iconsMap","docMark","folderType","getIcon","menuData","i","dialog_DialogComponent","SidebarComponent","collapsed","setCollapsed","layout","Sider","collapsible","onCollapse","alt","logo","split","letter","text","LayoutComponent","sidebar_SidebarComponent","DashboardPage","layout_LayoutComponent","Header","Content","Footer","useEditorContext","fsElement","fsElementId","setInterval","clearInterval","activeElement","_setActiveElement","resetActiveElement","isElementActive","activeId","_setActiveId","addElement","pageIndex","Date","toString","toConsumableArray","changeElement","elementIndex","_useState7","_useState8","showPreview","setShowPreview","addPage","deletePage","deleteElement","setActiveElement","insertIndex","splice","togglePreview","changeTextStyle","setActiveId","resetActiveId","handleChangeSettings","addImage","file","result","onchange","reader","FileReader","files","onload","readAsDataURL","click","popover","zIndex","cover","right","bottom","BlockComponent","displayColorPicker","setDisplayColorPicker","colorActive","setColor","input_number","Chrome_default","onChangeComplete","hex","EditorComponent","_useEditorContext","Group","block","settingsComponents","DND_CONTROL_TYPES","ElementControlComponent","_useDrag","useDrag","drag","settingsContent","TextSettings","react_color_lib","getHeight","innerElement","getBoundingClientRect","getEnableResizing","done","enableResizing","bottomLeft","bottomRight","topLeft","topRight","Box","isActiveText","react_rnd_lib","bounds","stopPropagation","onDoubleClick","disableDragging","onDragStop","onResizeStop","dir","elementRef","delta","_elementRef$getBoundi","textSettings_TextSettings","view_BlockView","view_BorderView","view_TableView","view_ImageView","view_TextView","renderElement","PageComponent","bodyOffset","setBodyOffset","scrollY","setScrollY","listRef","_useDrop","useDrop","accept","drop","monitor","getClientOffset","offsetLeft","offsetTop","didDrop","isOver","isOverCurrent","shallow","_useDrop2","listener","removeEventListener","box","LeftPanel","values","elementControl_ElementControlComponent","DocumentPageComponent","lib","backend","HTML5Backend","leftPanel_LeftPanel","page_PageComponent","editor_EditorComponent","DocumentPage","document_DocumentPageComponent","renderLayout","react_router","ReactDOM","context_FSProvider","exact","component","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.03a99df4.chunk.js","sourcesContent":["import firebase from '@firebase/app';\nimport '@firebase/auth';\nimport '@firebase/firestore';\nimport { FirebaseFirestore } from '@firebase/firestore-types';\n\nconst config = {\n  apiKey: 'AIzaSyCopkTv3qV3lT5nE-TARB5FjBe-TwR8A8w',\n  authDomain: 'binale-software-invoicing.firebaseapp.com',\n  databaseURL: 'https://binale-software-invoicing.firebaseio.com',\n  projectId: 'binale-software-invoicing',\n  storageBucket: 'binale-software-invoicing.appspot.com',\n  messagingSenderId: '878563105532',\n  uploadString: 'binale-software-invoicing.firebaseapp.com',\n};\n\nfirebase.initializeApp(config);\n\nexport const firestore: FirebaseFirestore = (firebase as any).firestore();\n\nexport { firebase };\n","export type GuidType = string;\nexport type DateISO = string;\n\n/*\n  File system models -- start\n */\n\nconst FOLDER = 'FILE_SYSTEM_ELEMENT__FOLDER';\nconst DOCUMENT = 'FILE_SYSTEM_ELEMENT__DOCUMENT';\n\nexport const FILE_SYSTEM_ELEMENT = { FOLDER, DOCUMENT };\n\nexport type FileSystemElementType =\n  | typeof FILE_SYSTEM_ELEMENT.FOLDER\n  | typeof FILE_SYSTEM_ELEMENT.DOCUMENT;\n\nexport interface UserLog {\n  userId?: GuidType;\n  login: string;\n  date: DateISO;\n}\n\nexport interface FileSystemElement {\n  id?: GuidType;\n  parentId: GuidType | null;\n  name: string;\n  type: FileSystemElementType;\n  status?: FileStatusType;\n  formTemplate?: boolean;\n  documentId?: GuidType;\n  editor?: UserLog;\n  creator?: UserLog;\n  isDefault?: boolean;\n}\n\nexport interface FileSystemNode extends FileSystemElement {\n  children?: FileSystemNode[];\n}\n\nconst DOCUMENT_IN_PROGRESS = 'FILE_STATUS__DOCUMENT_IN_PROGRESS';\nconst DOCUMENT__DONE = 'FILE_STATUS__DOCUMENT__DONE';\nconst TEMPLATE = 'FILE_STATUS__TEMPLATE';\n\nexport const FILE_STATUS = { DOCUMENT_IN_PROGRESS, DOCUMENT__DONE, TEMPLATE };\n\nexport type FileStatusType =\n  | typeof FILE_STATUS.DOCUMENT_IN_PROGRESS\n  | typeof FILE_STATUS.DOCUMENT__DONE\n  | typeof FILE_STATUS.TEMPLATE;\n\n/*\n  File system models -- end\n*/\n\n/*\n  Document models -- start\n*/\n\nconst TEXT = 'ELEMENT__TEXT';\nconst BLOCK = 'ELEMENT__BLOCK';\nconst BORDER = 'ELEMENT__BORDER';\nconst IMAGE = 'ELEMENT__IMAGE';\nconst TABLE = 'ELEMENT__TABLE';\n\nexport const ELEMENT = { TEXT, BLOCK, BORDER, IMAGE, TABLE };\n\nexport type ElementType =\n  | typeof ELEMENT.TEXT\n  | typeof ELEMENT.BLOCK\n  | typeof ELEMENT.BORDER\n  | typeof ELEMENT.IMAGE\n  | typeof ELEMENT.TABLE;\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Size {\n  height: number;\n  width: number;\n}\n\nexport interface Element {\n  id: GuidType;\n  type: ElementType;\n  position: Position;\n  size: Size;\n}\n\nexport interface BaseStyle {\n  width?: string;\n  height?: string;\n  border?: string;\n  borderTop?: string;\n  borderRight?: string;\n  borderBottom?: string;\n  borderLeft?: string;\n  opacity?: string;\n  backgroundColor?: string;\n}\n\nexport interface FontStyle {\n  color?: string;\n  fontFamily?: string;\n  fontSize?: string;\n  fontStyle?: string;\n  fontWeight?: string;\n  letterSpacing?: string;\n  lineHeight?: string;\n  textAlign?: string;\n  textTransform?: string;\n  textDecoration?: string;\n}\n\nexport type ElementStyle = BaseStyle & FontStyle;\n\nexport interface CellStyle {\n  colSpan?: number;\n  // rowSpan?: number; TODO: implement in next version\n  style?: ElementStyle;\n}\n\nexport interface CellStyles {\n  [id: string]: CellStyle;\n}\n\nexport type CellType = 'header' | 'body' | 'footer' | 'pdf';\n\nexport interface CellProps {\n  isActive?: boolean;\n  isDone?: boolean;\n  row: number;\n  column: number;\n  value: string;\n  style: ElementStyle;\n  changeTable: ChangeTable | undefined;\n  actions?: {\n    removeColumnFromTableElement: (column: number) => void;\n  };\n  cellType?: CellType;\n}\n\nexport interface TableProps {\n  data: string[][];\n  hasFooter?: boolean;\n  style?: ElementStyle;\n  cellsStyle?: CellStyles;\n}\n\nexport type TableElement = Element & TableProps;\n\nexport interface BlockProps {\n  style?: BaseStyle;\n}\n\nexport type BlockElement = Element & BlockProps;\n\nexport interface BorderProps {\n  style?: BaseStyle;\n}\n\nexport type BorderElement = Element & BorderProps;\n\nexport interface TextProps {\n  value?: string;\n  style?: ElementStyle;\n}\n\nexport type TextElement = Element & TextProps;\n\nexport interface ImageProps {\n  style?: BaseStyle;\n  value?: string;\n}\n\nexport type ImageElement = Element & ImageProps;\n\nexport type ElementUnion = TableElement | BlockElement | BorderElement | TextElement | ImageElement;\n\nexport interface Control {\n  name: string;\n  icon: string;\n  type: ElementType;\n}\n\nexport type DocumentPage = ElementUnion[];\n\nexport interface ElementControl {\n  control: Control;\n  element: ElementUnion;\n}\n\nexport interface DragObject {\n  type: string; // TODO: make type\n  element: ElementType;\n}\n\nexport type ChangeTable = (row: number, column: number, value: string) => void;\n\nexport type SerializedDocument = string;\n\nexport interface Document {\n  id?: GuidType;\n  templateId?: GuidType;\n  name: string;\n  content: SerializedDocument; // === JSON.stringify(DocumentPage[])\n}\n\n/*\n  Document models -- end\n*/\n\n/*\n  User models -- start\n*/\n\nconst ADMIN = 'ROLE__ADMIN';\nconst MODERATOR = 'ROLE__MODERATOR';\nconst PARTICIPANT = 'ROLE__PARTICIPANT';\n\nexport const ROLE = { ADMIN, MODERATOR, PARTICIPANT };\n\nexport type RoleType = typeof ROLE.ADMIN | typeof ROLE.MODERATOR | typeof ROLE.PARTICIPANT;\n\nexport interface User {\n  id: GuidType;\n  login: string;\n  role: RoleType;\n}\n\n/*\n  User models -- end\n*/\n","import React from 'react';\n\nimport { CollectionReference, DocumentReference } from '@firebase/firestore-types';\nimport { firestore } from 'config/firebase';\n\nimport {\n  Document,\n  FILE_STATUS,\n  FILE_SYSTEM_ELEMENT,\n  FileSystemElement,\n  FileSystemElementType,\n  FileSystemNode,\n} from 'models';\n\ninterface Company {\n  uuid: string;\n}\n\ninterface Props {\n  activeCompany?: Company;\n}\n\ninterface State {\n  fsItems: Map<string, FileSystemElement>;\n  parentForCreateFromTemplate: FileSystemElement | null;\n  copiedElement: FileSystemElement | null;\n}\n\ninterface FSContextInterface {\n  fsItems: Map<string, FileSystemElement>;\n  documents: CollectionReference;\n  copiedElement: FileSystemElement | null;\n  parentForCreateFromTemplate: FileSystemElement | null;\n  setParentForCreateFromTemplate: (parent: FileSystemElement) => void;\n  getFolderElementsTreeById: (id: string, type?: FileSystemElementType) => FileSystemNode[];\n  getFolderElementsById: (id: string, type?: FileSystemElementType) => FileSystemElement[];\n  getElement: (id?: string) => FileSystemElement | null;\n  commit: (id?: string) => Promise<void>;\n  removeById: (id?: string) => Promise<void>;\n  createItem: (data: FileSystemElement) => Promise<DocumentReference>;\n  copyItem: (copyData: FileSystemElement) => void;\n  pasteItem: (parentId: string) => Promise<DocumentReference | void>;\n}\nconst mockFn: any = () => {};\n\nconst documents = firestore.collection('documents');\n\nexport const FSContext = React.createContext<FSContextInterface>({\n  fsItems: new Map<string, FileSystemElement>(),\n  documents,\n  parentForCreateFromTemplate: null,\n  copiedElement: null,\n  setParentForCreateFromTemplate: mockFn,\n  getFolderElementsTreeById: mockFn,\n  getFolderElementsById: mockFn,\n  getElement: mockFn,\n  commit: mockFn,\n  removeById: mockFn,\n  createItem: mockFn,\n  copyItem: mockFn,\n  pasteItem: mockFn,\n});\n\nexport class FSProvider extends React.PureComponent<Props, State> {\n  state: State = {\n    fsItems: new Map<string, FileSystemElement>(),\n    parentForCreateFromTemplate: null,\n    copiedElement: null,\n  };\n\n  collection = firestore.collection('folders');\n\n  componentDidMount() {\n    this.subscribe();\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<Props>) {\n    this.subscribe();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { fsItems, copiedElement, parentForCreateFromTemplate } = this.state;\n\n    return (\n      <FSContext.Provider\n        value={{\n          fsItems,\n          documents,\n          copiedElement,\n          parentForCreateFromTemplate,\n          setParentForCreateFromTemplate: this.setParentForCreateFromTemplate,\n          getFolderElementsTreeById: this.getFolderElementsTreeById,\n          getFolderElementsById: this.getFolderElementsById,\n          getElement: this.getElement,\n          commit: this.commit,\n          copyItem: this.copyItem,\n          createItem: this.createItem,\n          pasteItem: this.pasteItem,\n          removeById: this.removeById,\n        }}\n      >\n        {this.props.children}\n      </FSContext.Provider>\n    );\n  }\n\n  protected subscribe() {\n    this.unsubscribe();\n    this.unsubscribe = this.collection.onSnapshot(querySnapshot => {\n      const map = new Map<string, FileSystemElement>();\n      // todo consider docChanges\n      // https://firebase.google.com/docs/firestore/query-data/listen#view_changes_between_snapshots\n      querySnapshot.forEach(doc => {\n        const data: FileSystemElement = doc.data() as any;\n        data.id = doc.id;\n        map.set(doc.id, data);\n      });\n      this.setState({ fsItems: map });\n    });\n  }\n\n  protected unsubscribe: () => void = () => {};\n\n  protected getFolderElementsTreeById = (\n    id: string,\n    type?: FileSystemElementType,\n  ): FileSystemNode[] => {\n    const elements = this.getFolderElementsById(id, type);\n\n    return elements.map<FileSystemNode>(element => {\n      if (!element.id) return element;\n      const children = this.getFolderElementsTreeById(element.id, type);\n      return children.length > 0 ? { ...element, children } : element;\n    });\n  };\n  protected getFolderElementsById = (\n    id: string,\n    type?: FileSystemElementType,\n  ): FileSystemElement[] => {\n    const items: FileSystemElement[] = [];\n\n    this.state.fsItems.forEach(value => {\n      const isNeededType = !type || (type && value.type === type);\n      if (value.parentId === id && isNeededType) items.push({ ...value });\n    });\n\n    return items;\n  };\n  protected getElement = (id?: string): FileSystemElement | null => {\n    if (!id) return null;\n\n    const element = this.state.fsItems.get(id);\n\n    return element || null;\n  };\n  protected commit = (id?: string): Promise<void> => {\n    return this.collection.doc(id).update({ status: FILE_STATUS.DOCUMENT__DONE });\n  };\n  protected removeById = (id?: string) => {\n    return this.collection.doc(id).delete();\n  };\n  protected createItem = async (data: FileSystemElement): Promise<DocumentReference> => {\n    try {\n      if (data.type === FILE_SYSTEM_ELEMENT.DOCUMENT) {\n        let newDocument: Document = {\n          name: data.name,\n          content: '[[]]',\n        };\n\n        if (data.formTemplate) {\n          const templateSnapshot = await documents.doc(data.documentId).get();\n          newDocument = templateSnapshot.data() as Document;\n          newDocument.name = data.name;\n        }\n\n        const docRef = await documents.add(newDocument);\n        data.documentId = docRef.id;\n      }\n\n      return await this.collection.add(data);\n    } catch (error) {\n      throw Error('File creation error ' + error);\n    }\n  };\n  protected copyItem = (data: FileSystemElement) => {\n    this.setState({ copiedElement: data });\n  };\n  protected pasteItem = async (parentId: string): Promise<DocumentReference | void> => {\n    const { copiedElement } = this.state;\n    if (!copiedElement) return;\n\n    const newElement: FileSystemElement = {\n      ...copiedElement,\n      parentId,\n    };\n\n    if (copiedElement.parentId === parentId) {\n      newElement.name = `copy_${newElement.name}`;\n    }\n\n    if (newElement.type === FILE_SYSTEM_ELEMENT.DOCUMENT) {\n      if (newElement.status === FILE_STATUS.DOCUMENT__DONE) {\n        newElement.status = FILE_STATUS.DOCUMENT_IN_PROGRESS;\n      }\n\n      newElement.formTemplate = true;\n    }\n\n    const docRef = await this.createItem(newElement);\n\n    this.setState({ copiedElement: null });\n\n    return docRef;\n  };\n  protected setParentForCreateFromTemplate = (parent: FileSystemElement) => {\n    this.setState({ parentForCreateFromTemplate: parent });\n  };\n}\n","import React, { FC, useContext } from 'react';\r\n\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { Breadcrumb } from 'antd';\r\n\r\nimport { FSContext } from 'state/context';\r\n\r\nimport { Route } from 'antd/lib/breadcrumb/Breadcrumb';\r\nimport { FileSystemElement, GuidType } from 'models';\r\n\r\nimport './styles.css';\r\n\r\nexport interface BreadcrumbsProps extends RouteComponentProps<{ id: GuidType }> {}\r\n\r\nconst BreadcrumbComponent: FC<BreadcrumbsProps> = props => {\r\n  const { match } = props;\r\n  let { id } = match.params;\r\n\r\n  id = id || 'Root';\r\n\r\n  const { fsItems } = useContext(FSContext);\r\n\r\n  return (\r\n    <Breadcrumb\r\n      className=\"breadcrumb\"\r\n      itemRender={itemRender}\r\n      routes={getBreadcrumbList({ fsItems, id })}\r\n    />\r\n  );\r\n};\r\n\r\ninterface ListProps {\r\n  fsItems: Map<string, FileSystemElement>;\r\n  id: GuidType;\r\n}\r\n\r\nfunction getBreadcrumbList(props: ListProps): Route[] {\r\n  const list: Route[] = [];\r\n\r\n  let item = props.fsItems.get(props.id);\r\n\r\n  for (;;) {\r\n    if (!item) {\r\n      list.reverse();\r\n      break;\r\n    }\r\n\r\n    const { id, name, parentId } = item;\r\n\r\n    list.push({\r\n      path: `/dashboard/${id}`,\r\n      breadcrumbName: name,\r\n      children: [],\r\n    });\r\n\r\n    item = props.fsItems.get(parentId as GuidType);\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction itemRender(route: Route, params: any, routes: Route[]): React.ReactNode {\r\n  const isLast = routes.indexOf(route) === routes.length - 1;\r\n\r\n  return isLast ? (\r\n    <span>{route.breadcrumbName}</span>\r\n  ) : (\r\n    <Link to={route.path}>{route.breadcrumbName}</Link>\r\n  );\r\n}\r\n\r\nexport { BreadcrumbComponent };\r\n","import { withRouter } from 'react-router';\r\nimport { BreadcrumbComponent } from './breadcrumb';\r\n\r\nexport const Breadcrumb = withRouter(BreadcrumbComponent);\r\n","import { FILE_SYSTEM_ELEMENT, FileSystemElementType } from 'models';\r\n\r\nconst EXPLORER = 'explorer';\r\nconst DOCUMENT = 'document';\r\nconst FOLDER = 'folder';\r\n\r\nexport const CONTEXT_MENU_ID = {\r\n  EXPLORER,\r\n  DOCUMENT,\r\n  FOLDER,\r\n};\r\n\r\nconst explorer = [\r\n  {\r\n    name: 'new folder',\r\n    value: 'new_folder',\r\n    icon: 'folder-add',\r\n  },\r\n  {\r\n    name: 'new file',\r\n    value: 'new_file',\r\n    icon: 'file-add',\r\n  },\r\n  {\r\n    name: 'past',\r\n    value: 'past',\r\n    icon: 'profile',\r\n  },\r\n];\r\n\r\nconst document = [\r\n  {\r\n    name: 'edit',\r\n    value: 'edit-template',\r\n    icon: 'edit',\r\n  },\r\n  {\r\n    name: 'info',\r\n    value: 'info',\r\n    icon: 'info-circle',\r\n  },\r\n  {\r\n    name: 'download',\r\n    value: 'download',\r\n    icon: 'cloud-download',\r\n  },\r\n  {\r\n    name: 'copy',\r\n    value: 'copy',\r\n    icon: 'copy',\r\n  },\r\n  {\r\n    name: 'commit',\r\n    value: 'commit',\r\n    icon: 'file-done',\r\n  },\r\n  {\r\n    name: 'delete',\r\n    value: 'delete',\r\n    icon: 'delete',\r\n  },\r\n];\r\n\r\nconst folder = [\r\n  {\r\n    name: 'copy',\r\n    value: 'copy',\r\n    icon: 'copy',\r\n  },\r\n  {\r\n    name: 'delete',\r\n    value: 'delete',\r\n    icon: 'delete',\r\n  },\r\n];\r\n\r\nexport const menus = [\r\n  {\r\n    data: explorer,\r\n    currentId: EXPLORER,\r\n  },\r\n  {\r\n    data: document,\r\n    currentId: DOCUMENT,\r\n  },\r\n  {\r\n    data: folder,\r\n    currentId: FOLDER,\r\n  },\r\n];\r\n\r\nconst contextMenuMap = {\r\n  [FILE_SYSTEM_ELEMENT.FOLDER]: FOLDER,\r\n  [FILE_SYSTEM_ELEMENT.DOCUMENT]: DOCUMENT,\r\n};\r\n\r\nexport const getContextMenuId = (type: FileSystemElementType): string => {\r\n  const contextMenu = contextMenuMap[type];\r\n\r\n  if (contextMenu) return contextMenu;\r\n\r\n  throw new Error('Error of FS element type: ' + type);\r\n};\r\n","import React, { CSSProperties, FC } from 'react';\r\n\r\nimport { View } from '@react-pdf/renderer';\r\n\r\nimport { BlockProps } from 'models';\r\n\r\nconst BlockPDF: FC<BlockProps> = props => {\r\n  const { style } = props;\r\n  return <View style={style as CSSProperties} />;\r\n};\r\n\r\nexport { BlockPDF };\r\n","import React, { CSSProperties, FC } from 'react';\r\n\r\nimport { BlockProps } from 'models';\r\n\r\nimport './styles.css';\r\n\r\nconst BlockView: FC<BlockProps> = props => {\r\n  const { style } = props;\r\n  return <div className=\"block-element\" style={style as CSSProperties} />;\r\n};\r\n\r\nexport { BlockView };\r\n","import React, { CSSProperties, FC } from 'react';\r\n\r\nimport { View } from '@react-pdf/renderer';\r\n\r\nimport { BorderProps } from 'models';\r\n\r\nconst BorderPDF: FC<BorderProps> = props => {\r\n  const { style } = props;\r\n  return <View style={style as CSSProperties} />;\r\n};\r\n\r\nexport { BorderPDF };\r\n","import React, { CSSProperties, FC } from 'react';\r\n\r\nimport { BorderProps } from 'models';\r\n\r\nimport './styles.css';\r\n\r\nconst BorderView: FC<BorderProps> = props => {\r\n  const { style } = props;\r\n  return <div className=\"border-element\" style={style as CSSProperties} />;\r\n};\r\n\r\nexport { BorderView };\r\n","import React, { FC } from 'react';\n\nimport { CellProps, CellStyle, CellStyles, CellType, ChangeTable, ElementStyle } from 'models';\n\nexport interface TableMembers {\n  header: string[];\n  body: string[][];\n  footer: string[];\n}\n\nexport interface Count {\n  current: number;\n  length: number;\n}\n\nexport interface CellPosition {\n  row: number;\n  column: number;\n}\n\nconst CELL_POSITION_SPLITTER = '-';\n\nconst DEFAULT_PROPS = {\n  FONT_SIZE: 12,\n  BORDER: '1pt solid black',\n  HEADER_BG_COLOR: '#ccc',\n  BODY_BG_COLOR: '#fff',\n  FOOTER_BG_COLOR: '#ccc',\n  CELL_PADDING: '2pt 6pt',\n};\n\nexport const getCellPositionFromId = (id: string): CellPosition => {\n  const [row, column] = id.split(CELL_POSITION_SPLITTER);\n  return { row: +row, column: +column };\n};\n\nexport const getIdFromCellPosition = ({ row, column }: CellPosition): string =>\n  `${row}${CELL_POSITION_SPLITTER}${column}`;\n\nconst getCellStyle = (row: number, column: number, styles: CellStyles): CellStyle => {\n  const id = getIdFromCellPosition({ row, column });\n  const style = styles[id];\n  return style || {};\n};\n\nconst getBorderStyle = (row: Count, column: Count, style?: string): ElementStyle => {\n  style = style || DEFAULT_PROPS.BORDER;\n  const border: ElementStyle = {};\n\n  const isLastRow = row.current + 1 === row.length;\n  const isLastColumn = column.current + 1 === column.length;\n\n  if (!isLastRow) border.borderBottom = style;\n  if (!isLastColumn) border.borderRight = style;\n\n  return border;\n};\n\nexport const baseTableStyles = {\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    border: DEFAULT_PROPS.BORDER,\n    backgroundColor: DEFAULT_PROPS.BODY_BG_COLOR,\n    fontSize: DEFAULT_PROPS.FONT_SIZE,\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: DEFAULT_PROPS.HEADER_BG_COLOR,\n    fontWeight: 'bold',\n  },\n  footer: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: DEFAULT_PROPS.FOOTER_BG_COLOR,\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  cell: {\n    display: 'flex',\n    padding: DEFAULT_PROPS.CELL_PADDING,\n  },\n};\n\nexport const getTableMembers = (data: string[][], hasFooter: boolean = false): TableMembers => {\n  const [header, ...other] = data;\n  const footer: string[] = hasFooter ? other.pop() || [] : [];\n\n  return { header, body: other, footer };\n};\n\nexport const cellRender = (\n  defaultColumnWidth: number,\n  defaultCellStyle: ElementStyle,\n  cellsStyle: CellStyles,\n  CellComponent: FC<CellProps>,\n  changeTable?: ChangeTable,\n  isActive?: boolean,\n  isDone?: boolean,\n  actions?: {\n    removeColumnFromTableElement: (column: number) => void;\n  },\n) => (data: string[], rowIndex: number, rowsLength: number, cellType: CellType) => (\n  cell: string,\n  cellIndex: number,\n) => {\n  const rowCount: Count = { current: rowIndex, length: rowsLength };\n  const columnCount: Count = { current: cellIndex, length: data.length };\n\n  const { colSpan = 1, style = {} } = getCellStyle(rowIndex, cellIndex, cellsStyle);\n\n  const resultStyle = {\n    width: `${defaultColumnWidth * colSpan}%`,\n    ...defaultCellStyle,\n    ...getBorderStyle(rowCount, columnCount),\n    ...style,\n  };\n\n  const cellComponent: JSX.Element = (\n    <CellComponent\n      key={cellIndex}\n      style={resultStyle}\n      value={cell}\n      isActive={isActive}\n      isDone={isDone}\n      row={rowCount.current + (cellType === 'body' ? 1 : 0)}\n      column={columnCount.current}\n      cellType={cellType}\n      changeTable={changeTable}\n      actions={actions}\n    />\n  );\n\n  return cellComponent;\n};\n","import React, { FC } from 'react';\n\nimport { StyleSheet, Text, View } from '@react-pdf/renderer';\n\nimport { CellProps, TableProps } from 'models';\n\nimport { baseTableStyles, cellRender, getTableMembers } from './helpers';\n\nconst defaultStyles: any = StyleSheet.create(baseTableStyles);\n\nconst TableCell: FC<CellProps> = props => {\n  const { value, style } = props;\n\n  return (\n    <View style={style}>\n      {/* <Text style={{ textWrap: 'nowrap', textOverflow: 'ellipsis', maxLines: 1 }}>{value}</Text> */}\n      <Text>{value}</Text>\n    </View>\n  );\n};\n\nconst TablePDF: FC<TableProps> = props => {\n  const { data, hasFooter = false, style = {}, cellsStyle = {} } = props;\n  const { header, body, footer } = getTableMembers(data, hasFooter);\n\n  const defaultColumnWidth = 100 / header.length;\n  const height = data.length;\n\n  const render = cellRender(defaultColumnWidth, defaultStyles.cell, cellsStyle, TableCell);\n\n  return (\n    <View style={{ ...defaultStyles.table, ...style }}>\n      <View style={defaultStyles.header}>{header.map(render(header, 0, height, 'pdf'))}</View>\n\n      {body.map((rows, rowIndex) => (\n        <View style={{ ...defaultStyles.row, height: 25 }} key={rowIndex}>\n          {rows.map(render(rows, rowIndex, height, 'pdf'))}\n        </View>\n      ))}\n\n      {footer.length ? (\n        <View style={defaultStyles.footer}>\n          {footer.map(render(footer, height - 1, height, 'pdf'))}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport { TablePDF };\n","import React, { CSSProperties, FC, useEffect, useRef, useState } from 'react';\n\nimport { Button, Form, Input, Tooltip } from 'antd';\n\nimport { CellProps, ChangeTable, TableProps } from 'models';\n\nimport { baseTableStyles, cellRender, getTableMembers } from './helpers';\n\nimport './styles.css';\n\ninterface TableViewProps extends TableProps {\n  innerRef: any;\n  changeTable: ChangeTable;\n  actions: {\n    addRowToTableElement: () => void;\n    addColumnToTableElement: () => void;\n    removeRowFromTableElement: (row: number) => void;\n    removeColumnFromTableElement: (column: number) => void;\n  };\n  isActive: boolean;\n  isDone: boolean;\n}\n\nconst defaultStyles: any = baseTableStyles;\n\nconst TableCell: FC<CellProps> = props => {\n  const { value, style, isActive, isDone, row, column, changeTable, cellType } = props;\n  const [isEditable, setIsEditable] = useState(false);\n  const toggleEditability = () => setIsEditable(!isEditable);\n\n  const inputRef = useRef<HTMLInputElement>();\n\n  useEffect(() => {\n    if (isEditable && inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditable]);\n\n  const onClick = () => {\n    if (isActive && !isDone) toggleEditability();\n  };\n\n  const save = (ev: any) => {\n    if (changeTable) changeTable(row, column, ev.target.value);\n    toggleEditability();\n  };\n\n  const className = cellType === 'header' ? 'cell header-cell' : 'cell';\n\n  const removeColumn = () => {\n    if (!props.actions) return;\n    props.actions.removeColumnFromTableElement(column);\n  };\n\n  return isEditable ? (\n    <div className={className} style={style as CSSProperties}>\n      <Form.Item className=\"cell-input\">\n        <Input.TextArea\n          ref={inputRef as any}\n          autosize={true}\n          defaultValue={value}\n          onPressEnter={save}\n          onBlur={save}\n        />\n      </Form.Item>\n    </div>\n  ) : (\n    <div className={className} style={style as CSSProperties} onClick={onClick}>\n      {cellType === 'header' && !isDone && (\n        <div className=\"header-actions\">\n          <Tooltip placement=\"top\" title=\"delete column\">\n            <Button type=\"danger\" icon=\"close\" size=\"small\" shape=\"circle\" onClick={removeColumn} />\n          </Tooltip>\n        </div>\n      )}\n      <span>{value}</span>\n    </div>\n  );\n};\n\nconst TableView: FC<TableViewProps> = props => {\n  const {\n    data,\n    hasFooter = false,\n    style = {},\n    cellsStyle = {},\n    innerRef,\n    changeTable,\n    actions,\n    isActive,\n    isDone,\n  } = props;\n\n  const { header, body, footer } = getTableMembers(data, hasFooter);\n\n  const defaultColumnWidth = 100 / header.length;\n  const height = data.length;\n\n  const render = cellRender(\n    defaultColumnWidth,\n    defaultStyles.cell,\n    cellsStyle,\n    TableCell,\n    changeTable,\n    isActive,\n    isDone,\n    actions,\n  );\n\n  return (\n    <>\n      {!isDone && (\n        <div className=\"table-element-controls\">\n          <Tooltip placement=\"right\" title=\"add row\">\n            <Button\n              icon=\"arrow-down\"\n              size=\"small\"\n              shape=\"circle\"\n              onClick={actions.addRowToTableElement}\n            />\n          </Tooltip>\n          <Tooltip placement=\"right\" title=\"add column\">\n            <Button\n              icon=\"arrow-right\"\n              size=\"small\"\n              shape=\"circle\"\n              onClick={actions.addColumnToTableElement}\n            />\n          </Tooltip>\n        </div>\n      )}\n\n      <div ref={innerRef} className=\"table-element\" style={{ ...defaultStyles.table, ...style }}>\n        <div style={defaultStyles.header}>{header.map(render(header, 0, height, 'header'))}</div>\n\n        {body.map((rows, rowIndex) => (\n          <div className=\"row\" style={defaultStyles.row} key={rowIndex}>\n            {!isDone && (\n              <div className=\"row-actions\">\n                <Tooltip placement=\"left\" title=\"delete row\">\n                  <Button\n                    type=\"danger\"\n                    icon=\"close\"\n                    size=\"small\"\n                    shape=\"circle\"\n                    onClick={() => actions.removeRowFromTableElement(rowIndex)}\n                  />\n                </Tooltip>\n              </div>\n            )}\n            {rows.map(render(rows, rowIndex, height, 'body'))}\n          </div>\n        ))}\n\n        {footer.length ? (\n          <div style={defaultStyles.footer}>\n            {footer.map(render(footer, height - 1, height, 'footer'))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport { TableView };\n","import React, { CSSProperties, FC } from 'react';\r\n\r\nimport { Text, View } from '@react-pdf/renderer';\r\n\r\nimport { TextProps } from 'models';\r\n\r\ninterface TextPropsComponent extends TextProps {\r\n  value?: string;\r\n}\r\n\r\nconst TextPDF: FC<TextPropsComponent> = props => {\r\n  const { style, value } = props;\r\n  return (\r\n    <View style={style as CSSProperties}>\r\n      <Text>{value}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport { TextPDF };\r\n","import { Input } from 'antd';\r\nimport { TextProps } from 'models';\r\nimport React, { CSSProperties, FC } from 'react';\r\nimport './styles.css';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface TextViewProps extends TextProps {\r\n  isActive: boolean;\r\n  value?: string;\r\n  handleChangeText: (value: string) => void;\r\n}\r\n\r\nconst TextView: FC<TextViewProps> = props => {\r\n  const { style, isActive, handleChangeText, value } = props;\r\n  return (\r\n    <div className=\"text-element\">\r\n      {isActive ? (\r\n        <TextArea\r\n          autosize={true}\r\n          value={value}\r\n          style={{ ...(style as CSSProperties), minHeight: '100%' }}\r\n          onChange={(e: any) => handleChangeText(e.target.value)}\r\n        />\r\n      ) : (\r\n        <div style={{ ...(style as CSSProperties) }}>{value}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TextView };\r\n","import React, { CSSProperties, FC } from 'react';\n\nimport { Image, View } from '@react-pdf/renderer';\n\nimport { ImageProps } from 'models';\n\ninterface ImagePropsComponent extends ImageProps {\n  value?: string;\n}\n\nconst ImagePDF: FC<ImagePropsComponent> = props => {\n  const { style, value } = props;\n  return (\n    <View style={style as CSSProperties}>\n      <Image src={value || ''} />\n    </View>\n  );\n};\n\nexport { ImagePDF };\n","import React, { FC } from 'react';\n\nimport { ImageProps } from 'models';\n\nimport './styles.css';\n\ninterface ImageViewProps extends ImageProps {\n  value?: string;\n}\n\nconst ImageView: FC<ImageViewProps> = props => {\n  const { value } = props;\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        background: `url(${value}) no-repeat`,\n        backgroundSize: '100% 100%',\n      }}\n    />\n  );\n};\n\nexport { ImageView };\n","import {\n  BlockElement,\n  BorderElement,\n  ELEMENT,\n  ElementControl,\n  ImageElement,\n  TableElement,\n  TextElement,\n} from 'models';\nconst textElement: TextElement = {\n  id: 'default-text',\n  type: ELEMENT.TEXT,\n  position: { x: 0, y: 0 },\n  size: { width: 200, height: 200 },\n  style: { fontSize: '16pt', color: '#000' },\n  value: 'Text',\n};\n\nconst imageElement: ImageElement = {\n  id: 'default-image',\n  type: ELEMENT.IMAGE,\n  position: { x: 0, y: 0 },\n  size: { width: 200, height: 200 },\n  style: { backgroundColor: 'black' },\n  value: '',\n};\n\nconst blockElement: BlockElement = {\n  id: 'default-block',\n  type: ELEMENT.BLOCK,\n  position: { x: 0, y: 0 },\n  size: { width: 200, height: 200 },\n  style: { backgroundColor: '#000' },\n};\n\nconst borderElement: BorderElement = {\n  id: 'default-border',\n  type: ELEMENT.BORDER,\n  position: { x: 0, y: 0 },\n  size: { width: 200, height: 200 },\n  style: { border: '1pt solid #000' },\n};\n\nconst tableElement: TableElement = {\n  id: 'default-table',\n  type: ELEMENT.TABLE,\n  position: { x: 0, y: 0 },\n  size: { width: 200, height: 100 },\n  hasFooter: true,\n  data: [\n    ['header 1', 'header 2'],\n    ['cell 1', 'cell 2'],\n    ['cell 3', 'cell 4'],\n    ['cell 5', 'cell 6'],\n    ['cell 3', 'cell 7'],\n  ],\n};\n\nexport const elements: { [key: string]: ElementControl } = {\n  [ELEMENT.TEXT]: {\n    control: {\n      name: 'Text',\n      icon: 'font-size',\n      type: ELEMENT.TEXT,\n    },\n    element: textElement,\n  },\n  [ELEMENT.BLOCK]: {\n    control: {\n      name: 'Block',\n      icon: 'block',\n      type: ELEMENT.BLOCK,\n    },\n    element: blockElement,\n  },\n  [ELEMENT.BORDER]: {\n    control: {\n      name: 'Border',\n      icon: 'border',\n      type: ELEMENT.BORDER,\n    },\n    element: borderElement,\n  },\n  [ELEMENT.IMAGE]: {\n    control: {\n      name: 'Image',\n      icon: 'picture',\n      type: ELEMENT.IMAGE,\n    },\n    element: imageElement,\n  },\n  [ELEMENT.TABLE]: {\n    control: {\n      name: 'Table',\n      icon: 'table',\n      type: ELEMENT.TABLE,\n    },\n    element: tableElement,\n  },\n};\n\nexport * from './block';\nexport * from './border';\nexport * from './table';\nexport * from './text';\nexport * from './image';\n","import React, { FC } from 'react';\n\nimport { Document, Page } from '@react-pdf/renderer';\n\nimport { BlockPDF, BorderPDF, ImagePDF, TablePDF, TextPDF } from 'components/elements';\n\nimport { DocumentPage, ELEMENT } from 'models';\n\nexport interface DocumentPDFProps {\n  pages: DocumentPage[];\n}\n\nconst DocumentPDF: FC<DocumentPDFProps> = props => {\n  const { pages } = props;\n\n  return (\n    <Document>\n      {pages.map((page, key) => (\n        <Page key={key}>\n          {page.map((element, elementKey) => {\n            const style: any = {\n              position: 'absolute',\n              top: element.position.y,\n              left: element.position.x,\n              width: element.size.width,\n              height: element.size.height,\n              ...element.style,\n            };\n\n            if (element.type === ELEMENT.BLOCK) {\n              return <BlockPDF key={elementKey} style={style} />;\n            }\n\n            if (element.type === ELEMENT.BORDER) {\n              return <BorderPDF key={elementKey} style={style} />;\n            }\n\n            if (element.type === ELEMENT.TEXT && 'value' in element) {\n              return <TextPDF key={elementKey} style={style} value={element.value} />;\n            }\n\n            if (element.type === ELEMENT.IMAGE && 'value' in element) {\n              return <ImagePDF key={elementKey} style={style} value={element.value} />;\n            }\n\n            if (element.type === ELEMENT.TABLE && 'hasFooter' in element) {\n              const { data, hasFooter, cellsStyle } = element;\n\n              // use a little hack\n              style.top += 30;\n              delete style.height;\n\n              return (\n                <TablePDF\n                  key={elementKey}\n                  data={data}\n                  hasFooter={hasFooter}\n                  style={style}\n                  cellsStyle={cellsStyle}\n                />\n              );\n            }\n\n            return null;\n          })}\n        </Page>\n      ))}\n    </Document>\n  );\n};\n\nexport { DocumentPDF };\n","import React, { FC, useContext, useEffect, useState } from 'react';\n\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { Icon, Menu } from 'antd';\nimport { connectMenu, ContextMenu, MenuItem } from 'react-contextmenu';\n\nimport { DocumentPDF } from 'components/documentPDF';\n\nimport { FSContext } from 'state/context';\n\nimport { Document, DocumentPage, FILE_STATUS, FileSystemElement } from 'models';\n\nimport { CONTEXT_MENU_ID } from '../explorer/contextMenu';\nimport './styles.css';\n\nexport interface DataItem {\n  name: string;\n  icon: string;\n  value: string;\n  target: string;\n}\n\nexport interface MenuProps {\n  data: DataItem[];\n  currentId: string;\n  onChange: any;\n  trigger: {\n    item: FileSystemElement;\n  };\n}\n\nconst ContextMenuComponent: FC<MenuProps> = props => {\n  const { currentId, trigger, onChange } = props;\n\n  let { data } = props;\n\n  if (trigger && trigger.item) {\n    if (trigger.item.status === FILE_STATUS.DOCUMENT_IN_PROGRESS) {\n      data = data.filter(item => item.value !== 'edit-template');\n    }\n\n    if (trigger.item.status === FILE_STATUS.DOCUMENT__DONE) {\n      data = data.filter(item => !['delete', 'commit', 'edit-template'].includes(item.value));\n    }\n\n    if (trigger.item.status === FILE_STATUS.TEMPLATE) {\n      data = data.filter(item => !['commit', 'download'].includes(item.value));\n    }\n  }\n\n  const [pages, setPages] = useState<DocumentPage[]>([]);\n  const { documents } = useContext(FSContext);\n\n  useEffect(() => {\n    if (!trigger || !trigger.item) return;\n\n    const unsubscribe = documents.doc(trigger.item.documentId).onSnapshot(querySnapshot => {\n      const document = querySnapshot.data() as Document;\n      const content: DocumentPage[] = JSON.parse(document.content);\n      setPages(content);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [documents, trigger]);\n\n  const fileName = trigger && trigger.item ? `${trigger.item.name}.pdf` : '';\n\n  return (\n    <ContextMenu id={currentId} className=\"context-menu\">\n      <Menu selectable={false}>\n        {data.map((item: DataItem) => (\n          <Menu.Item key={item.name}>\n            <MenuItem key={item.name} data={item} onClick={onChange}>\n              {item.value === 'download' ? (\n                <PDFDownloadLink\n                  key={item.name}\n                  document={<DocumentPDF pages={pages} />}\n                  fileName={fileName}\n                >\n                  {({ blob, url, loading, error }) =>\n                    loading ? (\n                      'Document loading...'\n                    ) : (\n                      <>\n                        <Icon\n                          type={item.icon}\n                          className={item.value === 'delete' ? 'alert' : 'primary'}\n                        />\n                        <span>{item.name}</span>\n                      </>\n                    )\n                  }\n                </PDFDownloadLink>\n              ) : (\n                <>\n                  <Icon\n                    type={item.icon}\n                    className={item.value === 'delete' ? 'alert' : 'primary'}\n                  />\n                  <span>{item.name}</span>\n                </>\n              )}\n            </MenuItem>\n          </Menu.Item>\n        ))}\n      </Menu>\n    </ContextMenu>\n  );\n};\n\nexport const ContextMenuConnected = connectMenu(CONTEXT_MENU_ID.DOCUMENT)(ContextMenuComponent);\n","import React, { FC } from 'react';\r\n\r\nimport { Modal } from 'antd';\r\n\r\nexport interface DialogProps {\r\n  open: boolean;\r\n  title?: string;\r\n  content: any;\r\n  onClose: (e: React.MouseEvent<HTMLElement>) => void;\r\n  onAction: (e: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nconst DialogComponent: FC<DialogProps> = props => {\r\n  const { open, title, content, onAction, onClose } = props;\r\n\r\n  return (\r\n    <Modal visible={open} title={title} onOk={onAction} onCancel={onClose}>\r\n      {content}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { DialogComponent };\r\n","import React, { FC } from 'react';\r\n\r\nimport { FileSystemElement, FileSystemNode } from 'models';\r\n\r\nimport Icon from 'antd/lib/icon';\r\nimport Tree, { AntdTreeNodeAttribute } from 'antd/lib/tree';\r\n\r\nconst getTreeNodeIcon = ({ expanded }: AntdTreeNodeAttribute) => (\r\n  <Icon type={expanded ? 'folder-open' : 'folder'} theme=\"filled\" />\r\n);\r\n\r\nconst getTreeNodes = (data: FileSystemNode[]) => {\r\n  return data.map(item => (\r\n    <Tree.TreeNode data={item} key={item.id} icon={getTreeNodeIcon} title={item.name}>\r\n      {item.children ? getTreeNodes(item.children) : null}\r\n    </Tree.TreeNode>\r\n  ));\r\n};\r\n\r\nexport interface TreeComponentProps {\r\n  data: FileSystemNode[];\r\n  onSelect: (parent: FileSystemElement) => void;\r\n}\r\n\r\nexport const TreeComponent: FC<TreeComponentProps> = props => {\r\n  const { data, onSelect } = props;\r\n\r\n  return (\r\n    <Tree\r\n      showIcon={true}\r\n      switcherIcon={<Icon type=\"down\" />}\r\n      onSelect={(_, event) => {\r\n        if (!event.node.props.data) return;\r\n        onSelect(event.node.props.data);\r\n      }}\r\n    >\r\n      {getTreeNodes(data)}\r\n    </Tree>\r\n  );\r\n};\r\n","import createUseContext from 'constate';\nimport { useState } from 'react';\n\nconst CREATE_FOLDER = 'CREATE_FOLDER';\nconst CREATE_DOCUMENT = 'CREATE_DOCUMENT';\nconst CREATE_DOCUMENT_FROM_TEMPLATE = 'CREATE_DOCUMENT_FROM_TEMPLATE';\nexport const MODAL_MODES = { CREATE_FOLDER, CREATE_DOCUMENT, CREATE_DOCUMENT_FROM_TEMPLATE };\n\nexport type ModalModesType =\n  | typeof MODAL_MODES.CREATE_FOLDER\n  | typeof MODAL_MODES.CREATE_DOCUMENT\n  | typeof CREATE_DOCUMENT_FROM_TEMPLATE;\n\nfunction useModal() {\n  const [open, setOpen] = useState(false);\n  const [mode, setMode] = useState<ModalModesType>(MODAL_MODES.CREATE_FOLDER);\n  const [target, setTarget] = useState<any>(null);\n\n  // tslint:disable-next-line: no-shadowed-variable\n  const modalToggle = (modalMode?: ModalModesType, target?: any) => {\n    setOpen(!open);\n    setMode(modalMode || MODAL_MODES.CREATE_FOLDER);\n    setTarget(target);\n  };\n\n  return {\n    open,\n    mode,\n    modalToggle,\n    target,\n    setTarget,\n  };\n}\n\nexport const useModalContext = createUseContext(useModal);\n","import { useState } from 'react';\r\n\r\nexport type ModalState<T> = {\r\n  open: boolean;\r\n  title?: string;\r\n  target?: T;\r\n  content?: any;\r\n};\r\n\r\nexport interface ModalActions<T> {\r\n  setModalState: (nextState: ModalState<T>) => void;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst initialState: ModalState<any> = {\r\n  open: false,\r\n  title: '',\r\n  target: null,\r\n  content: null,\r\n};\r\n\r\nexport function useModal<T>(): [ModalState<T>, ModalActions<T>] {\r\n  const [state, setState] = useState<ModalState<T>>(initialState);\r\n\r\n  const setModalState = (nextState: ModalState<T>) => {\r\n    setState(nextState);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  return [\r\n    state,\r\n    {\r\n      setModalState,\r\n      closeModal,\r\n    },\r\n  ];\r\n}\r\n","import { useContext } from 'react';\r\n\r\nimport { FILE_STATUS, GuidType } from 'models';\r\n\r\nimport { FSContext } from 'state/context';\r\n\r\nexport function useFileSystem(folderId: GuidType) {\r\n  const { fsItems, ...other } = useContext(FSContext);\r\n\r\n  const items = other.getFolderElementsById(folderId);\r\n\r\n  const defaultFolders = items.filter(item => item.isDefault);\r\n  const progress = items.filter(item => item.status === FILE_STATUS.DOCUMENT_IN_PROGRESS);\r\n  const body = items.filter(\r\n    item => item.status !== FILE_STATUS.DOCUMENT_IN_PROGRESS && !item.isDefault,\r\n  );\r\n\r\n  return {\r\n    items,\r\n    elements: [defaultFolders, progress, body],\r\n    ...other,\r\n  };\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // tslint:disable-next-line: no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // tslint:disable-next-line: no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              // tslint:disable-next-line: no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      // tslint:disable-next-line: no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // tslint:disable-next-line: no-console\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export function deepClone<T>(obj: T): T {\r\n  if (typeof obj !== 'object') throw Error('Is not an object: ' + obj);\r\n\r\n  const serialized: string = JSON.stringify(obj);\r\n\r\n  try {\r\n    return JSON.parse(serialized);\r\n  } catch (error) {\r\n    throw Error('Error when cloning: ' + error);\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from 'react';\n\nimport { elements } from 'components/elements';\n\nimport { FSContext } from 'state/context';\n\nimport {\n  Document,\n  DocumentPage,\n  ElementType,\n  ElementUnion,\n  FILE_STATUS,\n  Position,\n  TableElement,\n  TextElement,\n} from 'models';\n\nimport { deepClone } from 'utils';\n\nconst maxX: number = 595.28;\nconst maxY: number = 841.89;\n\nconst removeCallback = (removeIndex: number) => (_: any, index: number) => index !== removeIndex;\n\ninterface EditorState {\n  activeElement: ElementUnion | null;\n  pages: DocumentPage[];\n  isDone: boolean;\n  showPreview: boolean;\n  actions: EditorActions;\n  activeId: any;\n}\n\nexport interface EditorActions {\n  addPage: () => void;\n  deletePage: (pageIndex: number) => void;\n  addElement: (pageIndex: number, type: ElementType, position: Position, value?: string) => void;\n  changeElement: (pageIndex: number, elementIndex: number, element: ElementUnion) => void;\n  deleteElement: (pageIndex: number, elementIndex: number) => void;\n  setActiveElement: (element: ElementUnion) => void;\n  resetActiveElement: () => void;\n  isElementActive: (element: ElementUnion) => boolean;\n  addRowToTableElement: (pageIndex: number, elementIndex: number, element: TableElement) => void;\n  addColumnToTableElement: (pageIndex: number, elementIndex: number, element: TableElement) => void;\n  removeRowFromTableElement: (\n    pageIndex: number,\n    elementIndex: number,\n    element: TableElement,\n    row: number,\n  ) => void;\n  removeColumnFromTableElement: (\n    pageIndex: number,\n    elementIndex: number,\n    element: TableElement,\n    column: number,\n  ) => void;\n  togglePreview: () => void;\n  addImage: (pageIndex: number, type: ElementType, position: Position) => void;\n  handleChangeText: (\n    pageIndex: number,\n    elementIndex: number,\n    value: string,\n    element: TextElement,\n  ) => void;\n  changeTextStyle: (\n    pageIndex: number,\n    elementIndex: number,\n    style: string,\n    value: string,\n    element: TextElement,\n  ) => void;\n  handleChangeSettings: (\n    pageIndex: number,\n    elementIndex: number,\n    style: string,\n    value: string,\n    type: string,\n    element: ElementUnion,\n  ) => void;\n  setActiveId: (page: number, id: number) => void;\n  resetActiveId: () => void;\n}\n\nexport interface EditorProps {\n  fsElementId: string | undefined;\n}\n\nlet saveIntervalId: any;\n\nconst pagesKey = Symbol('pages');\n\nexport function useEditor(props: EditorProps): EditorState {\n  const { getElement, documents } = useContext(FSContext);\n  const fsElement = getElement(props.fsElementId);\n\n  const isDone = !!fsElement && fsElement.status === FILE_STATUS.DOCUMENT__DONE;\n\n  const [pages, setPages] = useState<DocumentPage[]>([[]]);\n\n  // FIXME: solve LexicalEnvironment issue with refs\n  (window as any)[pagesKey] = pages;\n\n  useEffect(() => {\n    if (!fsElement) return;\n\n    const unsubscribe = documents.doc(fsElement.documentId).onSnapshot(querySnapshot => {\n      console.log('subscribe');\n      const document = querySnapshot.data() as Document;\n      const content: DocumentPage[] = JSON.parse(document.content);\n      if (Array.isArray(content)) setPages(content);\n    });\n\n    saveIntervalId = setInterval(() => {\n      const content = JSON.stringify((window as any)[pagesKey]);\n      documents.doc(fsElement.documentId).update({ content });\n      console.log('Document was updated');\n    }, 5000);\n\n    return () => {\n      unsubscribe();\n      clearInterval(saveIntervalId);\n      console.log('unsubscribe');\n    };\n  }, [fsElement, documents]);\n\n  const addPage = () => setPages([...pages, []]);\n\n  const deletePage = (pageIndex: number) => {\n    setPages(pages.filter(removeCallback(pageIndex)));\n  };\n\n  // tslint:disable-next-line: variable-name\n  const [activeElement, _setActiveElement] = useState<ElementUnion | null>(null);\n\n  const resetActiveElement = () => _setActiveElement(null);\n  const isElementActive = (element: ElementUnion): boolean => {\n    return !!activeElement && activeElement.id === element.id;\n  };\n  const setActiveElement = (element: ElementUnion) => {\n    if (isElementActive(element)) {\n      resetActiveElement();\n    } else {\n      _setActiveElement(element);\n    }\n  };\n  // tslint:disable-next-line: variable-name\n  const [activeId, _setActiveId] = useState<{ page: number; id: number } | null>(null);\n\n  const setActiveId = (page: number, id: number) => _setActiveId({ page, id });\n  const resetActiveId = () => _setActiveId(null);\n\n  const addElement = (pageIndex: number, type: ElementType, position: Position, value?: string) => {\n    const element = deepClone<ElementUnion>(elements[type].element);\n    if (!element) throw new Error('Unknown element type: ' + type);\n\n    const { size } = element;\n    const x = maxX < position.x + size.width ? maxX - size.width : position.x;\n    const y = maxY < position.y + size.height ? maxY - size.height : position.y;\n    element.position = { x, y };\n    element.id = `f${(+new Date()).toString(16)}`;\n    if (value && 'value' in element) {\n      element.value = value;\n    }\n\n    const page: DocumentPage = pages[pageIndex];\n    pages[pageIndex] = [...page, element];\n    setPages([...pages]);\n  };\n\n  const deleteElement = (pageIndex: number, elementIndex: number) => {\n    pages[pageIndex] = pages[pageIndex].filter(removeCallback(elementIndex));\n    setPages([...pages]);\n  };\n\n  const changeElement = (pageIndex: number, elementIndex: number, element: ElementUnion) => {\n    pages[pageIndex][elementIndex] = { ...element } as ElementUnion;\n    setPages([...pages]);\n  };\n\n  const addRowToTableElement = (pageIndex: number, elementIndex: number, element: TableElement) => {\n    const { data, hasFooter } = element;\n    const insertIndex: number = data.length - (hasFooter ? 1 : 0);\n    const columns = data[insertIndex].map(_ => 'cell');\n    element.data.splice(insertIndex, 0, columns);\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const addColumnToTableElement = (\n    pageIndex: number,\n    elementIndex: number,\n    element: TableElement,\n  ) => {\n    const { data } = element;\n    element.data = data.map(page => [...page, 'cell']);\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const removeRowFromTableElement = (\n    pageIndex: number,\n    elementIndex: number,\n    element: TableElement,\n    row: number,\n  ) => {\n    const data = deepClone(element.data);\n    data.splice(row, 1);\n    element.data = data;\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const removeColumnFromTableElement = (\n    pageIndex: number,\n    elementIndex: number,\n    element: TableElement,\n    column: number,\n  ) => {\n    const data = deepClone(element.data);\n    data.forEach(row => row.splice(column, 1));\n    element.data = data;\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const handleChangeText = (\n    pageIndex: number,\n    elementIndex: number,\n    value: string,\n    element: TextElement,\n  ) => {\n    element.value = value;\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const changeTextStyle = (\n    pageIndex: number,\n    elementIndex: number,\n    style: string,\n    value: string,\n    element: any,\n  ) => {\n    if (element.style[style] === 'underline') {\n      value = 'none';\n    }\n    if (element.style[style] === 'italic') {\n      value = 'normal';\n    }\n    if (element.style[style] === 'bold') {\n      value = 'normal';\n    }\n    if (style === 'fontSize') {\n      value = `${value}pt`;\n    }\n\n    element.style[style] = value;\n    changeElement(pageIndex, elementIndex, element);\n  };\n\n  const handleChangeSettings = (\n    pageIndex: number,\n    elementIndex: number,\n    style: string,\n    value: string,\n    type: string,\n  ) => {\n    const element: any = deepClone(activeElement);\n    if (element) {\n      if (style === 'border') {\n        element[type].border = `1pt solid ${value}`;\n      } else {\n        element[type][style] = value;\n      }\n      changeElement(pageIndex, elementIndex, element);\n    }\n  };\n\n  const addImage = (pageIndex: number, type: ElementType, position: Position) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n\n    let file: any = {};\n    let result: string = '';\n\n    input.onchange = (e: any) => {\n      const reader = new FileReader();\n\n      file = e.target.files[0];\n      // tslint:disable-next-line:only-arrow-functions\n      reader.onload = function(a: any) {\n        result = a.target.result;\n        addElement(pageIndex, type, position, result);\n      };\n      reader.readAsDataURL(file);\n    };\n    input.click();\n  };\n\n  const [showPreview, setShowPreview] = useState(false);\n\n  const togglePreview = () => setShowPreview(!showPreview);\n\n  return {\n    activeId,\n    activeElement,\n    pages,\n    isDone,\n    showPreview,\n    actions: {\n      addPage,\n      deletePage,\n      addElement,\n      changeElement,\n      deleteElement,\n      setActiveElement,\n      resetActiveElement,\n      isElementActive,\n      addRowToTableElement,\n      addColumnToTableElement,\n      removeRowFromTableElement,\n      removeColumnFromTableElement,\n      togglePreview,\n      handleChangeText,\n      changeTextStyle,\n      setActiveId,\n      resetActiveId,\n      handleChangeSettings,\n      addImage,\n    },\n  };\n}\n","import createUseContext from 'constate';\n\nimport { useFileSystem } from 'hooks';\n\nexport const useFileSystemContext = createUseContext(useFileSystem);\n","import React, { FC, useContext, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { Input, Modal as ModalAnt } from 'antd';\n\nimport { FILE_STATUS, FILE_SYSTEM_ELEMENT, FileSystemElement } from 'models';\n\nimport { MODAL_MODES, ModalModesType, useModalContext } from 'state';\nimport { FSContext } from 'state/context';\n\nexport interface ModalProps extends RouteComponentProps<{ id: string }> {}\n\nconst getTitle = (mode: ModalModesType): string => {\n  if (mode === MODAL_MODES.CREATE_DOCUMENT) {\n    return 'Create new document';\n  }\n  if (mode === MODAL_MODES.CREATE_FOLDER) {\n    return 'Create new folder';\n  }\n  if (mode === MODAL_MODES.CREATE_DOCUMENT_FROM_TEMPLATE) {\n    return 'Create document from template';\n  }\n\n  throw new Error('Unknown mode: ' + mode);\n};\n\nconst ModalComponent: FC<ModalProps> = props => {\n  const [name, setName] = useState('');\n  const { open, mode, modalToggle, target } = useModalContext();\n  const { fsItems, createItem, parentForCreateFromTemplate } = useContext(FSContext);\n\n  const { match, history } = props;\n\n  const onClose = () => {\n    modalToggle();\n    setName('');\n  };\n  const onCreate = async () => {\n    const data: FileSystemElement = {\n      name,\n      parentId: match.params.id,\n      type: FILE_SYSTEM_ELEMENT.FOLDER,\n    };\n\n    if (mode === MODAL_MODES.CREATE_DOCUMENT) {\n      const parent: FileSystemElement | undefined = fsItems.get(match.params.id);\n      if (!parent) return;\n\n      const isTemplate = parent.name === 'Vorlage';\n      data.type = FILE_SYSTEM_ELEMENT.DOCUMENT;\n      data.status = isTemplate ? FILE_STATUS.TEMPLATE : FILE_STATUS.DOCUMENT_IN_PROGRESS;\n    }\n\n    if (mode === MODAL_MODES.CREATE_DOCUMENT_FROM_TEMPLATE) {\n      if (!parentForCreateFromTemplate || !parentForCreateFromTemplate.id) return;\n\n      data.parentId = parentForCreateFromTemplate.id;\n      data.type = FILE_SYSTEM_ELEMENT.DOCUMENT;\n      data.status = FILE_STATUS.DOCUMENT_IN_PROGRESS;\n      data.formTemplate = true;\n      data.documentId = (target as FileSystemElement).documentId;\n    }\n\n    try {\n      await createItem(data);\n      onClose();\n\n      if (mode === MODAL_MODES.CREATE_DOCUMENT_FROM_TEMPLATE && parentForCreateFromTemplate) {\n        history.push({ pathname: `${parentForCreateFromTemplate.id}` });\n      }\n    } catch (error) {\n      console.log('Error on create FS element', error);\n    }\n  };\n\n  const handleInputChange = (event: any) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <ModalAnt visible={open} title={getTitle(mode)} onOk={onCreate} onCancel={onClose}>\n      {open && <Input autoFocus={true} onChange={handleInputChange} />}\n    </ModalAnt>\n  );\n};\n\nexport const Modal = withRouter(ModalComponent);\n","const hasOwn = {}.hasOwnProperty;\r\n\r\nexport default function classNames(\r\n  ...args: Array<string | { [className: string]: boolean }>\r\n): string {\r\n  const classes = [];\r\n\r\n  for (const arg of args) {\r\n    if (!arg) {\r\n      continue;\r\n    }\r\n\r\n    const argType = typeof arg;\r\n\r\n    if (argType === 'string' || argType === 'number') {\r\n      classes.push(arg);\r\n    } else if (Array.isArray(arg)) {\r\n      classes.push(classNames.apply(null, arg));\r\n    } else if (argType === 'object') {\r\n      const obj = arg as { [className: string]: boolean };\r\n      for (const key of Object.keys(obj)) {\r\n        if (hasOwn.call(obj, key) && obj[key]) {\r\n          classes.push(key);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return classes.join(' ');\r\n}\r\n","import React, { FC } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport Icon from 'antd/lib/icon';\nimport Table from 'antd/lib/table';\n\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { CONTEXT_MENU_ID, getContextMenuId, menus } from './contextMenu';\n\nimport { ContextMenuComponent } from 'components/contextMenu';\nimport { DialogComponent } from 'components/dialog';\nimport { TreeComponent } from 'components/fsTree';\nimport { Modal } from 'components/modal';\n\nimport { FILE_STATUS, FILE_SYSTEM_ELEMENT, FileSystemElement } from 'models';\n\nimport classNames from 'utils/classnames';\n\nimport { useFileSystem, useModal } from 'hooks';\nimport { MODAL_MODES, useModalContext } from 'state';\n\nimport 'antd/es/tree/style/css';\nimport './styles.css';\n\nexport interface IconsMap {\n  [key: string]: JSX.Element;\n}\n\nconst getIcon = (item: FileSystemElement) => {\n  let docMark = 'sync';\n  if (item.status === FILE_STATUS.TEMPLATE) docMark = 'layout';\n  if (item.status === FILE_STATUS.DOCUMENT__DONE) docMark = 'check-circle';\n\n  let folderType = 'lock';\n  if (item.name === 'Vorlage') folderType = 'layout';\n\n  const iconsMap: IconsMap = {\n    [FILE_SYSTEM_ELEMENT.FOLDER]: (\n      <>\n        {item.isDefault && <Icon className=\"marker\" type={folderType} />}\n        <Icon className=\"icon folder\" type=\"folder\" theme=\"filled\" />\n      </>\n    ),\n    [FILE_SYSTEM_ELEMENT.DOCUMENT]: (\n      <>\n        {<Icon className=\"marker doc\" type={docMark} />}\n        <Icon className=\"icon\" type=\"file\" theme=\"filled\" />\n      </>\n    ),\n  };\n\n  return iconsMap[item.type];\n};\n\nconst getFSElementClasses = (item: FileSystemElement): string => {\n  const classes = {\n    'fs-element': true,\n    'in-progress': item.status === FILE_STATUS.DOCUMENT_IN_PROGRESS,\n  };\n\n  return classNames(classes);\n};\n\nexport interface FSTarget {\n  name: string;\n  value: string;\n  item: FileSystemElement;\n}\n\nexport interface ExplorerProps extends RouteComponentProps<{ id: string }> {}\n\nconst ExplorerComponent: FC<ExplorerProps> = props => {\n  const { match, history } = props;\n\n  const {\n    items,\n    elements,\n    copiedElement,\n    parentForCreateFromTemplate,\n    ...fsActions\n  } = useFileSystem(match.params.id);\n  const [elementsModal, elementsModalActions] = useModal<FSTarget>();\n  const { modalToggle } = useModalContext();\n\n  const handleFSElement = (item: FileSystemElement) => () => {\n    if (item.type === FILE_SYSTEM_ELEMENT.FOLDER) {\n      history.push({ pathname: `${item.id}` });\n    } else {\n      if (item.status === FILE_STATUS.TEMPLATE) {\n        const target: FSTarget = {\n          item,\n          name: 'new_file_from_template',\n          value: 'new_file_from_template',\n        };\n\n        elementsModalActions.setModalState({\n          open: true,\n          title: 'Create document from template',\n          target,\n          content: (\n            <TreeComponent\n              data={fsActions.getFolderElementsTreeById('Root', FILE_SYSTEM_ELEMENT.FOLDER)}\n              onSelect={fsActions.setParentForCreateFromTemplate}\n            />\n          ),\n        });\n      } else {\n        history.push(`/document/${item.id}`);\n      }\n    }\n  };\n\n  const handleContextMenuActions = (event: any, target: FSTarget) => {\n    switch (target.value) {\n      case 'new_file': {\n        return modalToggle(MODAL_MODES.CREATE_DOCUMENT);\n      }\n      case 'new_folder': {\n        return modalToggle(MODAL_MODES.CREATE_FOLDER);\n      }\n      case 'edit-template': {\n        return history.push(`/document/${target.item.id}`);\n      }\n      case 'past': {\n        return fsActions.pasteItem(match.params.id);\n      }\n      case 'delete': {\n        if (target.item.isDefault) return;\n        const title = 'Are you sure you want to delete?';\n        return elementsModalActions.setModalState({ open: true, title, target });\n      }\n      case 'download': {\n        return console.log('download', event, target);\n      }\n      case 'info': {\n        const title = 'Document information';\n\n        const columns = [\n          {\n            dataIndex: 'title',\n          },\n          {\n            dataIndex: 'date',\n          },\n        ];\n\n        const data = [\n          {\n            title: 'Created',\n            date: '19.02.2019',\n          },\n          {\n            title: 'Updated',\n            date: '19.02.2019',\n          },\n        ];\n\n        const content = (\n          <Table\n            size=\"small\"\n            bordered={true}\n            showHeader={false}\n            pagination={false}\n            columns={columns}\n            dataSource={data}\n          />\n        );\n\n        return elementsModalActions.setModalState({ open: true, title, target, content });\n      }\n      case 'copy': {\n        return fsActions.copyItem(target.item);\n      }\n      case 'commit': {\n        const title = 'Are you sure you want to commit?';\n        return elementsModalActions.setModalState({ open: true, title, target });\n      }\n      default:\n        return;\n    }\n  };\n\n  const handleElementsModalAction = async () => {\n    if (!elementsModal.target) return;\n\n    const { value, name, item } = elementsModal.target;\n\n    if (!value || !item) return;\n\n    try {\n      if (value === 'delete') {\n        await fsActions.removeById(item.id);\n      }\n      if (value === 'commit') {\n        await fsActions.commit(item.id);\n      }\n      if (value === 'new_file_from_template') {\n        modalToggle(MODAL_MODES.CREATE_DOCUMENT_FROM_TEMPLATE, item);\n      }\n\n      elementsModalActions.closeModal();\n    } catch (error) {\n      console.log(`Error on ${name} FS element`, error);\n    }\n  };\n\n  const getElements = (data: FileSystemElement[], index: number) => (\n    <div key={index} className=\"root\">\n      {data.map(item => (\n        <ContextMenuTrigger\n          key={item.id}\n          collect={params => ({ ...params, item })}\n          id={item.isDefault ? '' : getContextMenuId(item.type)}\n        >\n          <div className={getFSElementClasses(item)} onClick={handleFSElement(item)}>\n            {getIcon(item)}\n            <span className=\"text\">{item.name}</span>\n          </div>\n        </ContextMenuTrigger>\n      ))}\n    </div>\n  );\n\n  return (\n    <ContextMenuTrigger id={CONTEXT_MENU_ID.EXPLORER}>\n      <div className=\"explorer\">{elements.map(getElements)}</div>\n\n      {menus.map(item => {\n        let menuData = item.data;\n\n        const parent = fsActions.getElement(match.params.id);\n        const isTemplate: boolean = !!parent && parent.name === 'Vorlage';\n\n        if (item.currentId === CONTEXT_MENU_ID.EXPLORER) {\n          menuData = item.data.filter(\n            i =>\n              i.value !== 'past' ||\n              (copiedElement &&\n                ((copiedElement.status !== FILE_STATUS.TEMPLATE && !isTemplate) ||\n                  (copiedElement.status === FILE_STATUS.TEMPLATE && isTemplate))),\n          );\n        }\n\n        return (\n          <ContextMenuComponent\n            key={item.currentId}\n            data={menuData}\n            currentId={item.currentId}\n            onChange={handleContextMenuActions}\n          />\n        );\n      })}\n\n      <Modal />\n\n      <DialogComponent\n        open={elementsModal.open}\n        title={elementsModal.title}\n        content={elementsModal.content}\n        onAction={handleElementsModalAction}\n        onClose={elementsModalActions.closeModal}\n      />\n    </ContextMenuTrigger>\n  );\n};\n\nexport { ExplorerComponent };\n","import { withRouter } from 'react-router';\r\n\r\nimport { ExplorerComponent } from './explorer';\r\n\r\nexport const Explorer = withRouter(ExplorerComponent);\r\n","import React, { FC, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\n\r\nimport { MODAL_MODES, useModalContext } from 'state';\r\n\r\nimport logo from 'assets/logo.png';\r\nimport './styles.css';\r\n\r\nexport interface MenuItem {\r\n  key: string;\r\n  text: string;\r\n  icon: string;\r\n}\r\nexport interface SidebarProps {}\r\n\r\nconst SidebarComponent: FC<SidebarProps> = props => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const { modalToggle } = useModalContext();\r\n\r\n  const onMenuClick = (params: ClickParam) => {\r\n    if (params.key === 'file') {\r\n      modalToggle(MODAL_MODES.CREATE_DOCUMENT);\r\n    }\r\n\r\n    if (params.key === 'folder') {\r\n      modalToggle(MODAL_MODES.CREATE_FOLDER);\r\n    }\r\n  };\r\n\r\n  const menuItems: MenuItem[] = [\r\n    {\r\n      key: 'folder',\r\n      text: 'New folder',\r\n      icon: 'folder-add',\r\n    },\r\n    {\r\n      key: 'file',\r\n      text: 'New document',\r\n      icon: 'file-add',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout.Sider collapsible={true} collapsed={collapsed} onCollapse={setCollapsed}>\r\n      <Link to=\"/\" className=\"logoContainer\">\r\n        <img className=\"logo\" alt=\"logo\" src={logo} />\r\n\r\n        {'binale'.split('').map((letter, index) => (\r\n          <span key={index} className=\"logoText\">\r\n            {letter}\r\n          </span>\r\n        ))}\r\n      </Link>\r\n\r\n      <Menu theme=\"dark\" selectable={false} onClick={onMenuClick}>\r\n        {menuItems.map(item => (\r\n          <Menu.Item key={item.key}>\r\n            <Icon type={item.icon} />\r\n            <span>{item.text}</span>\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    </Layout.Sider>\r\n  );\r\n};\r\n\r\nexport { SidebarComponent };\r\n","import React, { FC } from 'react';\r\n\r\nimport { Layout } from 'antd';\r\n\r\nimport { SidebarComponent } from 'components/sidebar';\r\n\r\nimport './styles.css';\r\n\r\nexport interface LayoutProps {}\r\n\r\nconst LayoutComponent: FC<LayoutProps> = props => {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <SidebarComponent />\r\n\r\n      {props.children}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport { LayoutComponent };\r\n","import React, { FC } from 'react';\r\n\r\nimport { Layout } from 'antd';\r\n\r\nimport { Breadcrumb } from 'components/breadcrumb';\r\nimport { Explorer } from 'components/explorer';\r\nimport { LayoutComponent } from 'components/layout';\r\n\r\nimport './styles.css';\r\n\r\nexport interface DashboardProps {}\r\n\r\nconst DashboardPage: FC<DashboardProps> = props => {\r\n  return (\r\n    <LayoutComponent>\r\n      <Layout className=\"dashboard\">\r\n        <Layout.Header className=\"header\" />\r\n\r\n        <Layout.Content className=\"content\">\r\n          <Breadcrumb />\r\n\r\n          <div className=\"main\">\r\n            <Explorer />\r\n          </div>\r\n        </Layout.Content>\r\n\r\n        <Layout.Footer className=\"footer\">Binale Software ©2019</Layout.Footer>\r\n      </Layout>\r\n    </LayoutComponent>\r\n  );\r\n};\r\n\r\nexport { DashboardPage };\r\n","import createUseContext from 'constate';\n\nimport { useEditor } from 'hooks';\n\nexport const useEditorContext = createUseContext(useEditor);\n","import React, { FC, useState } from 'react';\n\nimport { Button, InputNumber } from 'antd';\nimport ChromePicker from 'react-color/lib/components/chrome/Chrome';\n\nimport { ELEMENT, ElementUnion } from 'models';\nimport './styles.css';\n\nexport interface BlockProps {\n  handleChangeSettings: (style: string, value: string, type: string) => void;\n  activeElement: ElementUnion;\n}\n\nconst popover = {\n  position: 'absolute',\n  zIndex: '2',\n};\nconst cover = {\n  position: 'fixed',\n  top: '0px',\n  right: '0px',\n  bottom: '0px',\n  left: '0px',\n};\n\nconst setColor = (type: string, style: any): any => {\n  if (type === ELEMENT.BLOCK) {\n    return { type: 'backgroundColor', color: style.backgroundColor };\n  } else if (type === ELEMENT.BORDER) {\n    return { type: 'border', color: style.border.split(' ')[2] };\n  } else return null;\n};\n\nconst BlockComponent: FC<BlockProps> = ({ handleChangeSettings, activeElement }) => {\n  const { size, position, style, type } = activeElement;\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const handleClick = () => {\n    setDisplayColorPicker(!displayColorPicker);\n  };\n\n  const handleClose = () => {\n    setDisplayColorPicker(false);\n  };\n\n  const colorActive = setColor(type, style);\n  return (\n    <div className=\"block-settings-editor\">\n      <div className=\"fields\">\n        <span>Width:</span>\n        <InputNumber\n          value={size.width}\n          size=\"small\"\n          onChange={(value: any) => handleChangeSettings('width', value, 'size')}\n        />\n      </div>\n      <div className=\"fields\">\n        <span>Height:</span>\n        <InputNumber\n          value={size.height}\n          size=\"small\"\n          onChange={(value: any) => handleChangeSettings('height', value, 'size')}\n        />\n      </div>\n      <div className=\"fields\">\n        <span>X:</span>\n        <InputNumber\n          value={position.x}\n          size=\"small\"\n          onChange={(value: any) => handleChangeSettings('x', value, 'position')}\n        />\n      </div>\n      <div className=\"fields\">\n        <span>Y:</span>\n        <InputNumber\n          value={position.y}\n          size=\"small\"\n          onChange={(value: any) => handleChangeSettings('y', value, 'position')}\n        />\n      </div>\n      {colorActive && (\n        <>\n          <Button icon=\"bg-colors\" className=\"icon-settings\" onClick={handleClick} />\n          {displayColorPicker ? (\n            <div style={popover as any}>\n              <div style={cover as any} onClick={handleClose} />\n              <ChromePicker\n                color={colorActive}\n                onChangeComplete={(color: any) =>\n                  handleChangeSettings(colorActive.type, color.hex, 'style')\n                }\n              />\n            </div>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default BlockComponent;\n","import React, { FC } from 'react';\n\nimport { Button, Icon } from 'antd';\n\nimport { PDFDownloadLink } from '@react-pdf/renderer';\n\nimport { useEditorContext } from 'state/editor';\n\nimport { ElementUnion } from 'models';\n\nimport { DocumentPDF } from 'components/documentPDF';\nimport BlockComponent from './components/block/block';\n\n// import { VorlageComponent } from '../vorlage';\n\nimport './styles.css';\n\nexport interface EditorProps {}\nconst settingsComponents = (activeElement: ElementUnion, handleChangeSettings: any): any => ({\n  block: (\n    <BlockComponent activeElement={activeElement} handleChangeSettings={handleChangeSettings} />\n  ),\n});\n\nconst EditorComponent: FC<EditorProps> = () => {\n  const { pages, actions, activeId, activeElement, isDone } = useEditorContext();\n\n  const handleChangeSettings = (style: string, value: string, type: string) => {\n    actions.handleChangeSettings(\n      activeId.page,\n      activeId.id,\n      style,\n      value,\n      type,\n      activeElement as ElementUnion,\n    );\n  };\n\n  return (\n    <div className=\"editor-container\">\n      <Button.Group>\n        {!isDone && (\n          <Button onClick={actions.addPage}>\n            <Icon type=\"file\" theme=\"filled\" />\n            Add page\n          </Button>\n        )}\n        <PDFDownloadLink document={<DocumentPDF pages={pages} />} fileName=\"somename.pdf\">\n          {({ blob, url, loading, error }) =>\n            loading ? (\n              'Loading document...'\n            ) : (\n              <Button>\n                Save\n                <Icon type=\"save\" theme=\"filled\" />\n              </Button>\n            )\n          }\n        </PDFDownloadLink>\n\n        {!isDone && (\n          <Button onClick={actions.togglePreview}>\n            Preview\n            <Icon type=\"eye\" theme=\"filled\" />\n          </Button>\n        )}\n      </Button.Group>\n\n      {!isDone && !!activeElement && (\n        <div className=\"editor-settings\">\n          {settingsComponents(activeElement, handleChangeSettings).block}\n        </div>\n      )}\n\n      {/* <VorlageComponent /> */}\n    </div>\n  );\n};\n\nexport { EditorComponent };\n","import React, { FC } from 'react';\n\nimport { useDrag } from 'react-dnd';\n\nimport { Icon } from 'antd';\n\nimport { Control } from 'models';\n\nimport './styles.css';\n\nexport const DND_CONTROL_TYPES = {\n  BOX: 'DND_CONTROL_TYPE__BOX',\n};\n\nexport interface ElementProps {\n  control: Control;\n}\n\nconst ElementControlComponent: FC<ElementProps> = props => {\n  const { control } = props;\n  const [, drag] = useDrag({ item: { type: DND_CONTROL_TYPES.BOX, element: control.type } });\n  return (\n    <div>\n      <div className=\"element-control\" ref={drag}>\n        <Icon type={control.icon} />\n        <span className=\"text\">{control.name}</span>\n      </div>\n    </div>\n  );\n};\n\nexport { ElementControlComponent };\n","import { Button, Icon, InputNumber } from 'antd';\r\nimport React, { FC, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nimport './styles.css';\r\n\r\nexport interface TextSettingsProps {\r\n  changeTextStyle: (style: string, value: string) => void;\r\n  element: any;\r\n}\r\n\r\nconst settingsContent = [\r\n  {\r\n    icon: 'align-left',\r\n    style: 'textAlign',\r\n    value: 'left',\r\n  },\r\n  {\r\n    icon: 'align-center',\r\n    style: 'textAlign',\r\n    value: 'center',\r\n  },\r\n  {\r\n    icon: 'align-right',\r\n    style: 'textAlign',\r\n    value: 'right',\r\n  },\r\n  {\r\n    icon: 'underline',\r\n    style: 'textDecoration',\r\n    value: 'underline',\r\n  },\r\n  {\r\n    icon: 'bold',\r\n    style: 'fontWeight',\r\n    value: 'bold',\r\n  },\r\n  {\r\n    icon: 'italic',\r\n    style: 'fontWeight',\r\n    value: 'italic',\r\n  },\r\n];\r\n\r\nconst popover = {\r\n  position: 'absolute',\r\n  zIndex: '2',\r\n};\r\nconst cover = {\r\n  position: 'fixed',\r\n  top: '0px',\r\n  right: '0px',\r\n  bottom: '0px',\r\n  left: '0px',\r\n};\r\n\r\nconst TextSettings: FC<TextSettingsProps> = ({ changeTextStyle, element }) => {\r\n  const { style } = element;\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setDisplayColorPicker(!displayColorPicker);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDisplayColorPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-settings-root\">\r\n      <div className=\"font-setting\">\r\n        <Icon type=\"font-size\" className=\"icon-settings\" />\r\n        <InputNumber value={style.fontSize} onChange={(e: any) => changeTextStyle('fontSize', e)} />\r\n      </div>\r\n      <Button icon=\"font-colors\" className=\"icon-settings\" onClick={handleClick} />\r\n      {displayColorPicker ? (\r\n        <div style={popover as any}>\r\n          <div style={cover as any} onClick={handleClose} />\r\n          <ChromePicker\r\n            color={style.color}\r\n            onChangeComplete={(color: any) => changeTextStyle('color', color.hex)}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {settingsContent.map((item, index) => (\r\n        <Button\r\n          icon={item.icon}\r\n          key={index}\r\n          className=\"icon-settings\"\r\n          onClick={() => changeTextStyle(item.style, item.value)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TextSettings };\r\n","import React, { FC, MutableRefObject, useRef } from 'react';\nimport { DraggableData, ResizableDelta, Rnd } from 'react-rnd';\n\nimport { Button, Tooltip } from 'antd';\n\nimport { BlockView, BorderView, ImageView, TableView, TextView } from 'components/elements';\nimport { TextSettings } from 'components/textSettings';\n\nimport { useEditorContext } from 'state/editor';\n\nimport { ELEMENT, ElementType, ElementUnion, Position, TableElement, TextElement } from 'models';\n\nimport './styles.css';\n\nconst renderElement = (\n  element: ElementUnion,\n  innerElement: MutableRefObject<HTMLDivElement | undefined>,\n  changeTable: (row: number, column: number, value: string) => void,\n  addRowToTableElement: () => void,\n  addColumnToTableElement: () => void,\n  removeRowFromTableElement: (row: number) => void,\n  removeColumnFromTableElement: (column: number) => void,\n  isActive: boolean,\n  isDone: boolean,\n  handleChangeText: (value: string) => void,\n) => {\n  if (!element) return null;\n\n  if (element.type === ELEMENT.BLOCK) {\n    return <BlockView style={element.style} />;\n  }\n\n  if (element.type === ELEMENT.BORDER) {\n    return <BorderView style={element.style} />;\n  }\n\n  if (element.type === ELEMENT.TABLE && 'hasFooter' in element) {\n    const { data, hasFooter, style, cellsStyle } = element;\n\n    return (\n      <TableView\n        innerRef={innerElement}\n        data={data}\n        hasFooter={hasFooter}\n        style={style}\n        cellsStyle={cellsStyle}\n        isActive={isActive}\n        isDone={isDone}\n        changeTable={changeTable}\n        actions={{\n          addRowToTableElement,\n          addColumnToTableElement,\n          removeRowFromTableElement,\n          removeColumnFromTableElement,\n        }}\n      />\n    );\n  }\n  if (element.type === ELEMENT.IMAGE && 'value' in element) {\n    return <ImageView style={element.style} value={element.value} />;\n  }\n  if (element.type === ELEMENT.TEXT && 'value' in element) {\n    return (\n      <TextView\n        style={element.style}\n        isActive={isActive}\n        value={element.value}\n        handleChangeText={handleChangeText}\n      />\n    );\n  }\n};\n\nconst getHeight = (\n  innerElement: MutableRefObject<HTMLDivElement | undefined>,\n  element: ElementUnion,\n) => {\n  if (element.type !== ELEMENT.TABLE || !innerElement.current) return element.size.height;\n\n  const boundingRect = innerElement.current.getBoundingClientRect();\n  return boundingRect.height;\n};\n\nconst getEnableResizing = (type: ElementType, done: boolean) => {\n  const enableResizing = {\n    bottom: false,\n    bottomLeft: false,\n    bottomRight: false,\n    right: false,\n    left: false,\n    top: false,\n    topLeft: false,\n    topRight: false,\n  };\n\n  if (type === ELEMENT.TABLE) {\n    enableResizing.right = !done;\n    return enableResizing;\n  }\n\n  if (done) return enableResizing;\n\n  return undefined;\n};\n\nexport interface BoxProps {\n  id: number;\n  pageIndex: number;\n  element: ElementUnion;\n}\n\nconst Box: FC<BoxProps> = props => {\n  const { id, pageIndex, element } = props;\n  const { isDone, activeElement, actions } = useEditorContext();\n\n  const isActiveText = activeElement && activeElement.type === ELEMENT.TEXT;\n\n  const innerElement = useRef<HTMLDivElement>();\n\n  const { position, size } = element;\n\n  const stopPropagation = (e: any) => e.stopPropagation();\n\n  const isActive = actions.isElementActive(element);\n  const className = !isDone ? 'dnd-box' : '';\n\n  const onDoubleClick = (e: any) => {\n    actions.setActiveElement(element);\n    actions.setActiveId(pageIndex, id);\n  };\n\n  const onDragStop = (e: any, data: DraggableData) => {\n    element.position.x = data.x;\n    element.position.y = data.y;\n\n    actions.changeElement(pageIndex, id, element);\n  };\n\n  const onResizeStop = (\n    e: any,\n    dir: any,\n    elementRef: HTMLDivElement,\n    delta: ResizableDelta,\n    // tslint:disable-next-line: no-shadowed-variable\n    position: Position,\n  ) => {\n    const { width, height } = elementRef.getBoundingClientRect();\n\n    element.position.x = position.x;\n    element.position.y = position.y;\n    element.size.width = width;\n    element.size.height = height;\n    actions.changeElement(pageIndex, id, element);\n  };\n\n  const changeTable = (row: number, column: number, value: string) => {\n    (element as TableElement).data[row][column] = value;\n    actions.changeElement(pageIndex, id, element);\n  };\n\n  const addRowToTableElement = () => {\n    actions.addRowToTableElement(pageIndex, id, element as TableElement);\n  };\n\n  const addColumnToTableElement = () => {\n    actions.addColumnToTableElement(pageIndex, id, element as TableElement);\n  };\n\n  const removeRowFromTableElement = (row: number) => {\n    actions.removeRowFromTableElement(pageIndex, id, element as TableElement, row);\n  };\n\n  const removeColumnFromTableElement = (column: number) => {\n    actions.removeColumnFromTableElement(pageIndex, id, element as TableElement, column);\n  };\n\n  const handleChangeText = (value: string) => {\n    actions.handleChangeText(pageIndex, id, value, element as TextElement);\n  };\n\n  const changeTextStyle = (style: string, value: string) => {\n    actions.changeTextStyle(pageIndex, id, style, value, element as TextElement);\n  };\n  return (\n    <Rnd\n      className={className}\n      bounds=\"parent\"\n      // default={{ ...position, ...size }}\n      position={position}\n      size={{ width: size.width, height: getHeight(innerElement, element) }}\n      onClick={(e: any) => stopPropagation(e)}\n      onDoubleClick={onDoubleClick}\n      disableDragging={isActive || isDone}\n      onDragStop={onDragStop}\n      enableResizing={getEnableResizing(element.type, isDone)}\n      onResizeStop={onResizeStop}\n    >\n      {!isDone && isActive && (\n        <Tooltip className=\"remove-btn\" placement=\"right\" title=\"delete\">\n          <Button\n            type=\"danger\"\n            icon=\"close\"\n            size=\"small\"\n            shape=\"circle\"\n            onClick={() => actions.deleteElement(pageIndex, id)}\n          />\n        </Tooltip>\n      )}\n      {!isDone && isActive && isActiveText && (\n        <TextSettings changeTextStyle={changeTextStyle} element={element} />\n      )}\n      {renderElement(\n        element,\n        innerElement,\n        changeTable,\n        addRowToTableElement,\n        addColumnToTableElement,\n        removeRowFromTableElement,\n        removeColumnFromTableElement,\n        isActive,\n        isDone,\n        handleChangeText,\n      )}\n    </Rnd>\n  );\n};\n\nexport default Box;\n","import React, { FC, useEffect, useRef, useState } from 'react';\n\nimport { DND_CONTROL_TYPES } from 'components/elementControl';\nimport { useDrop } from 'react-dnd';\n\nimport { Button, Tooltip } from 'antd';\nimport Box from './box';\n\nimport { EditorActions } from 'hooks/useEditor';\nimport { DocumentPage, DragObject, ELEMENT } from 'models';\n\nimport './styles.css';\n\nexport interface PageProps {\n  pageIndex: number;\n  page: DocumentPage;\n  actions: EditorActions;\n  isDone: boolean;\n}\n\nconst PageComponent: FC<PageProps> = props => {\n  const { pageIndex, page, isDone, actions } = props;\n\n  // const [hasDropped, setHasDropped] = useState(false);\n  // const [hasDroppedOnChild, setHasDroppedOnChild] = useState(false);\n  const [bodyOffset, setBodyOffset] = useState(document.body.getBoundingClientRect());\n  const [scrollY, setScrollY] = useState(bodyOffset.top);\n\n  const listRef: any = useRef();\n\n  const [obj, drop] = useDrop({\n    accept: DND_CONTROL_TYPES.BOX,\n    drop(item: DragObject, monitor) {\n      const position = monitor.getClientOffset();\n\n      if (!obj || !position) return;\n\n      position.x = position.x - listRef.current.offsetLeft;\n      position.y = position.y - listRef.current.offsetTop + scrollY;\n\n      if (item.element === ELEMENT.IMAGE) {\n        actions.addImage(pageIndex, item.element, position);\n      } else {\n        actions.addElement(pageIndex, item.element, position);\n      }\n\n      const didDrop = monitor.didDrop();\n\n      if (didDrop) return;\n\n      // setHasDropped(true);\n      // setHasDroppedOnChild(didDrop);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  const listener = () => {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', listener);\n    return () => {\n      window.removeEventListener('scroll', listener);\n    };\n  });\n\n  return (\n    <div\n      className=\"list-container\"\n      ref={drop}\n      onClick={() => {\n        actions.resetActiveElement();\n        actions.resetActiveId();\n      }}\n    >\n      <div className=\"list\" ref={listRef}>\n        {pageIndex !== 0 && !isDone && (\n          <Tooltip className=\"remove-page\" placement=\"right\" title=\"delete\">\n            <Button\n              type=\"danger\"\n              icon=\"close\"\n              size=\"small\"\n              shape=\"circle\"\n              onClick={() => actions.deletePage(pageIndex)}\n            />\n          </Tooltip>\n        )}\n\n        {page.map((element, index) => (\n          <Box key={index} id={index} pageIndex={pageIndex} element={element} />\n        ))}\n\n        <span className=\"page\">{pageIndex + 1}</span>\n      </div>\n    </div>\n  );\n};\n\nexport { PageComponent };\n","import React, { FC } from 'react';\n\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport { DocumentPDF } from 'components/documentPDF';\nimport { ElementControlComponent } from 'components/elementControl';\nimport { elements } from 'components/elements';\n\nimport { DocumentPage } from 'models';\n\nexport interface LeftPanelProps {\n  pages: DocumentPage[];\n  showPreview: boolean;\n}\n\nconst LeftPanel: FC<LeftPanelProps> = props => {\n  const { pages, showPreview } = props;\n\n  return (\n    <div className=\"left-panel\">\n      {Object.values(elements).map(({ control }) => (\n        <ElementControlComponent key={control.name} control={control} />\n      ))}\n\n      {showPreview && (\n        <PDFViewer className=\"pdf-viewer\">\n          <DocumentPDF pages={pages} />\n        </PDFViewer>\n      )}\n    </div>\n  );\n};\n\nexport { LeftPanel };\n","import React, { FC } from 'react';\n\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport { Layout } from 'antd';\n\nimport { Breadcrumb } from 'components/breadcrumb';\nimport { EditorComponent } from 'components/editor';\nimport { PageComponent } from 'components/page';\n\nimport { LeftPanel } from './components';\n\nimport { useEditorContext } from 'state/editor';\n\nimport './styles.css';\n\nexport interface DocumentProps {}\n\nconst DocumentPageComponent: FC<DocumentProps> = () => {\n  const { pages, isDone, showPreview, actions } = useEditorContext();\n\n  return (\n    <Layout className=\"document\">\n      <Layout.Header className=\"header\">\n        <Breadcrumb />\n      </Layout.Header>\n\n      <Layout.Content className=\"content\">\n        <DndProvider backend={HTML5Backend}>\n          {!isDone && <LeftPanel pages={pages} showPreview={showPreview} />}\n\n          <div className=\"pages\">\n            {pages.map((page, index: number) => (\n              <PageComponent\n                key={index}\n                pageIndex={index}\n                page={page}\n                actions={actions}\n                isDone={isDone}\n              />\n            ))}\n          </div>\n\n          <EditorComponent />\n        </DndProvider>\n      </Layout.Content>\n\n      <Layout.Footer className=\"footer\">Binale Software ©2019</Layout.Footer>\n    </Layout>\n  );\n};\n\nexport { DocumentPageComponent };\n","import React, { FC } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { DocumentPageComponent } from './document';\n\nimport { useEditorContext } from 'state/editor';\n\ninterface DocumentPage extends RouteComponentProps<{ id: string }> {}\n\nconst DocumentPage: FC<DocumentPage> = props => {\n  const {\n    match: { params },\n  } = props;\n\n  return (\n    <useEditorContext.Provider fsElementId={params.id}>\n      <DocumentPageComponent />\n    </useEditorContext.Provider>\n  );\n};\n\nexport { DocumentPage };\n","import React, { FC } from 'react';\nimport { HashRouter, Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\n\nimport { DashboardPage } from 'pages/dashboard';\nimport { DocumentPage } from 'pages/document';\n\nfunction renderLayout(props: RouteComponentProps<any, any>) {\n  // TODO: implement auth if it'll be needed\n  const loggedIn: boolean = true;\n\n  if (loggedIn) {\n    return <Redirect to=\"/dashboard/Root\" />;\n  } else {\n    return <Redirect to=\"/auth\" />;\n  }\n}\n\nexport const Router: FC = () => (\n  <HashRouter>\n    <Route exact={true} path=\"/\" render={renderLayout} />\n    <Switch>\n      <Route path=\"/dashboard/:id\" component={DashboardPage} />\n      <Route path=\"/document/:id\" component={DocumentPage} />\n    </Switch>\n  </HashRouter>\n);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Router } from 'routing';\r\n\r\nimport { useModalContext } from 'state';\r\nimport { FSProvider } from 'state/context';\r\n\r\nimport 'assets/index.css';\r\n\r\nimport 'react-app-polyfill/ie11';\r\nimport { serviceWorker } from 'utils';\r\n\r\nReactDOM.render(\r\n  <FSProvider>\r\n    <useModalContext.Provider>\r\n      <Router />\r\n    </useModalContext.Provider>\r\n  </FSProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// TODO: change unregister() to register() after deployment will done\r\n// http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.2fcb8508.png\";"],"sourceRoot":""}